#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Как превратить асинхронный код в синхронный

https://thecode.media/asinkhronnyj-kod-na-python-sintaksis-i-osobennosti/
"""

import asyncio


async def fetch_data(id, wait_time):
    """Создаём корутину, которая симулирует IO операцию."""
    print(f'\nКорутина с IO-операцией {id} начала работу')
    # asyncio.sleep имитирует асинхронное ожидание на внешней системе,
    # мы можем ждать сразу несколько таких операций параллельно
    await asyncio.sleep(wait_time)
    # отчитываемся о завершении работы и возвращаем данные в виде строки
    print(f'Данные из корутины {id} загружены')
    return f'Данные, которые возвращает корутина {id}'


async def main():
    """Создаём корутину с основной логикой."""
    # создаём два объекта одной и той корутины
    task1 = fetch_data(1, 2)
    task2 = fetch_data(2, 2)

    # создаём переменную, которая запустит корутину через слово await
    result1 = await task1
    # смотрим, что получили из первой корутины
    print('Полученный результат result1: ', result1)
    # создаём переменную, которая запустит следующую корутину через слово await
    result2 = await task2
    # смотрим, что получили из второй корутины
    print('Полученный результат result2: ', result2)


# запускаем код
asyncio.run(main())
