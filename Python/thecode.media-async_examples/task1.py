#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Основные и дополнительные корутины

https://thecode.media/asinkhronnyj-kod-na-python-sintaksis-i-osobennosti/
"""

import asyncio


async def fetch_data(wait_time):
    """Создаём корутину, которая имитирует IO-операцию."""
    print('Корутина с IO-операцией начала работу')
    # asyncio.sleep имитирует асинхронное ожидание на внешней системе,
    # мы можем ждать сразу несколько таких операций параллельно
    await asyncio.sleep(wait_time)
    # отчитываемся о результате
    print('Данные загружены из внешней системы загружены')
    # отдаём результат запроса дальше в программу
    return {'Данные': 'Полученные данные из единственной корутины без номера'}


async def main():
    """Создаём корутину с основной логикой."""
    print('*Запущена основная корутина*\n')
    # запускаем корутину с IO-операцией
    task = fetch_data(3)
    # на этом месте выполнение будет приостановлено, пока не будет выполнена функция fetch_data
    result = await task
    # смотрим, какой результат вернула корутина с IO-операцией
    print('Полученный результат: ', result)
    print('\n*Основная корутина закончила работать*')


# запускаем код
asyncio.run(main())
